{"version":3,"sources":["images/logo1.svg","images/avatar.jpg","components/Header.js","utils/Api.js","utils/utils.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logoPath","alt","apiRequest","options","this","_url","url","_token","token","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","user","body","JSON","stringify","name","about","avatar","item","link","id","Card","props","card","likes","data-link","onClick","onCardClick","type","aria-label","data-place","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","useEffect","all","getProfileInfo","getCardsFromServer","setUser","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","key","_id","Footer","PopupWithForm","isOpen","action","noValidate","onClose","titleModifier","title","children","buttonText","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","imageData","setImageData","closeAllPopups","defaultValue","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.87e746db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo1.94cbab21.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.dc3245f1.jpg\";","import React from 'react';\r\nimport logoPath from '../images/logo1.svg';\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <img src={logoPath} alt=\"лого\" className=\"logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import { myApiData } from './utils'\r\n\r\nclass Api {\r\n  constructor(options) {\r\n    this._url = options.url;\r\n    this._token  = options.token;\r\n  }\r\n\r\n  getProfileInfo() {\r\n  return fetch(`${this._url}/users/me`, {\r\n  method: 'GET',\r\n  headers: {\r\n    authorization: this._token\r\n  }\r\n})\r\n  .then((res) => {\r\n    if (res.ok) {\r\n    return res.json();\r\n    }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n  })\r\n}\r\n//изменение данных пользователя\r\n  changeProfileInfo(user) {\r\n    return fetch(`${this._url}/users/me`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: this._token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n    name: user.name,\r\n    about: user.about\r\n    })\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n  //изменение аватара пользователя\r\n  changeProfileAvatar(user) {\r\n    return fetch(`${this._url}/users/me/avatar`, {\r\n    method: 'PATCH',\r\n    headers: {\r\n      authorization: this._token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n    avatar: user.avatar,\r\n    })\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  getCardsFromServer() {\r\n    return fetch(`${this._url}/cards`, {\r\n  method: 'GET',\r\n  headers: {\r\n    authorization: this._token\r\n  }\r\n})\r\n.then((res) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n\r\n  addNewCard(item) {\r\n    return fetch(`${this._url}/cards`, {\r\n    method: 'POST',\r\n    headers: {\r\n      authorization: this._token,\r\n      \"Content-Type\": \"application/json\"\r\n    },\r\n    body: JSON.stringify({\r\n      name: item.name,\r\n      link: item.link\r\n    })\r\n  })\r\n  .then((res) => {\r\n    if (res.ok) {\r\n      return res.json();\r\n    }\r\n    return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n  })\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return fetch(`${this._url}/cards/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n  addLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n  deleteLike(id) {\r\n    return fetch(`${this._url}/cards/likes/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    })\r\n    .then((res) => {\r\n      if (res.ok) {\r\n        return res.json();\r\n      }\r\n      return Promise.reject(`Что-то пошло не так: ${res.status}`);\r\n    })\r\n  }\r\n}\r\n\r\nexport const apiRequest = new Api(myApiData);\r\n","\nexport const formConfig = {\n  formSelector: '.popup__container',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__save',\n  inactiveButtonClass: 'popup__save_status_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active'\n}\n\nexport const myApiData = {\n  url: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  token: 'c7046677-4ab5-42c0-bca8-fcae81104075'\n}\n","import React from 'react';\n\nfunction Card(props) {\n  function handleClick() {\n    props.onCardClick(props.card);\n  }\nconst {name, link, likes} = props.card;\n  return (\n    <li className=\"card\">\n        <img data-link=\"\" className=\"card__image\" alt=\"\" src={link} onClick={handleClick}/>\n        <button type=\"button\" className=\"card__delete\" aria-label=\"удалить\"></button>\n        <div className=\"card__description\">\n          <h2 data-place=\"\" className=\"card__title\">{name}</h2>\n          <div className=\"card__like-information\">\n            <button type=\"button\" className=\"card__like\" aria-label=\"лайк\"></button>\n            <p className=\"card__likes-number\">{likes.length}</p>\n          </div>\n        </div>\n    </li>\n  );\n}\n\nexport default Card;\n","import React from 'react';\r\nimport { apiRequest } from '../utils/Api'\r\nimport avatar from '../images/avatar.jpg'\r\nimport Card from './Card'\r\n\r\nfunction Main(props) {\r\n  const [userName, setUserName] = React.useState('Жак-Ив Кусто');\r\n  const [userDescription, setUserDescription] = React.useState('Исследователь океана');\r\n  const [userAvatar, setUserAvatar] = React.useState(avatar);\r\n  const [cards, setCards] = React.useState([]);\r\n\r\n\r\n  function setUser (user) {\r\n      setUserName(user.name);\r\n      setUserDescription(user.about);\r\n      setUserAvatar(user.avatar);\r\n  }\r\n  React.useEffect(() => {\r\n    Promise.all([apiRequest.getProfileInfo(), apiRequest.getCardsFromServer()])\r\n   .then(([user, cards]) => {\r\n    setUser(user);\r\n    setCards(cards);\r\n    })\r\n    .catch((err) => {\r\n      console.log(`Ошибка ${err}.`);\r\n    })\r\n  }, []);\r\n\r\n  return (\r\n    <main>\r\n      <section className=\"profile\">\r\n        <div className=\"profile__avatarblock\" onClick={props.onEditAvatar}>\r\n          <div className=\"profile__editava\"></div>\r\n          <img src={userAvatar} alt=\"аватар\" className=\"profile__avatar\" />\r\n        </div>\r\n        <div className=\"profile__information\">\r\n          <div className=\"profile__user\">\r\n            <h1 className=\"profile__name\">{userName}</h1>\r\n            <button className=\"profile__edit-button\" type=\"button\" aria-label=\"редактировать\" onClick={props.onEditProfile}></button>\r\n          </div>\r\n            <p className=\"profile__description\">{userDescription}</p>\r\n        </div>\r\n        <button className=\"profile__add-button\" type=\"button\" aria-label=\"добавить фото\" onClick={props.onAddPlace}></button>\r\n      </section>\r\n      <ul className=\"cards\">\r\n        {cards.map((card) =>\r\n        <Card key={card._id} card={card} onCardClick={props.onCardClick}/>\r\n        )}\r\n     </ul>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <p className=\"footer__copyright\">&copy; 2020. Катюжанский Ростислав</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div id={props.name} className={(props.isOpen ? \"popup popup_opened\" : \"popup\")}>\n      <form className=\"popup__container\" id=\"author-container\" method=\"post\" action=\"#\" name={props.name} noValidate>\n        <button className=\"popup__close\" type=\"button\" aria-label=\"закрыть\" onClick={props.onClose}></button>\n        <h3 className={`popup__title ${props.titleModifier}`}>{props.title}</h3>\n        {props.children}\n        <button className=\"popup__save\" type=\"submit\">{props.buttonText}</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction ImagePopup(props) {\n  return (\n<div id=\"popup_photo\" className={(props.isOpen ? \"popup popup_opened popup_opacity_dark\" : \"popup popup_opacity_dark\")}>\n  <div className=\"popup__photo-position\">\n    <button className=\"popup__close\" type=\"button\" aria-label=\"закрыть\" onClick={props.onClose}></button>\n      <img alt={props.name} className=\"popup__image\" src={props.link}/>\n  <p className=\"popup__place\">{props.name}</p>\n  </div>\n</div>\n  );\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header'\nimport Main from './Main'\nimport Footer from './Footer'\nimport PopupWithForm from './PopupWithForm'\nimport ImagePopup from './ImagePopup'\n\n\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [imageData, setImageData] = React.useState({});\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n  function handleCardClick(card) {\n    setImageData({})//! если обнулять при закрытии, то картинка исчезает до закрытия анимации\n    setImageData(card)\n    setSelectedCard(true)\n  }\n\n  function closeAllPopups() {\n    if (isEditAvatarPopupOpen) {\n      setIsEditAvatarPopupOpen(false);\n    }\n    if (isEditProfilePopupOpen) {\n      setIsEditProfilePopupOpen(false);\n    }\n    if (isAddPlacePopupOpen) {\n      setIsAddPlacePopupOpen(false);\n    }\n    if (selectedCard) {\n      setSelectedCard(false);\n\n    }\n  }\n\nreturn (\n    <div className=\"page\">\n      <Header />\n      <Main onEditAvatar={handleEditAvatarClick} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onCardClick={handleCardClick}/>\n      <Footer />\n      <PopupWithForm name=\"popup_avatar\" title=\"Обновить аватар\" buttonText=\"Сохранить\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n      <div className=\"popup__input-field\">\n          <input id=\"avatar-input\" className=\"popup__input popup__input_avatar\" type=\"url\" defaultValue =\"\" placeholder=\"Ссылка на аватар\" name=\"avatar\" required />\n          <span id=\"avatar-input-error\" className=\"popup__input-error\"></span>\n        </div>\n      </PopupWithForm>\n      <PopupWithForm name=\"popup_author\" title=\"Редактировать профиль\" buttonText=\"Сохранить\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n      <div className=\"popup__input-field\">\n          <input id=\"name-input\" className=\"popup__input popup__input_name\" type=\"text\" defaultValue=\"\"  placeholder=\"Введите имя\" name=\"name\" required minLength=\"2\" maxLength=\"40\" pattern=\"[A-Za-zА-ЯЁа-яё -]{1,}\" />\n          <span id=\"name-input-error\" className=\"popup__input-error\"></span>\n        </div>\n        <div className=\"popup__input-field\">\n          <input id=\"job-input\" className=\"popup__input popup__input_job\" type=\"text\" defaultValue =\"\" placeholder=\"Род занятий\" name=\"about\" required minLength=\"2\" maxLength=\"200\" />\n          <span id=\"job-input-error\" className=\"popup__input-error\"></span>\n        </div>\n      </PopupWithForm>\n      <PopupWithForm name=\"popup_card\" title=\"Новое место\" buttonText=\"Сохранить\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n        <div className=\"popup__input-field\">\n          <input id=\"place-input\" className=\"popup__input popup__input_place\" type=\"text\" placeholder=\"Название\" name=\"name\" minLength=\"2\" maxLength=\"30\" required />\n          <span id=\"place-input-error\" className=\"popup__input-error\"></span>\n        </div>\n        <div className=\"popup__input-field\">\n          <input id=\"link-input\" className=\"popup__input popup__input_link\" type=\"url\" placeholder=\"Ссылка на картинку\" name=\"link\" required />\n          <span id=\"link-input-error\" className=\"popup__input-error\"></span>\n        </div>\n      </PopupWithForm>\n      <PopupWithForm name=\"popup_delete\" title=\"Вы уверены?\" buttonText=\"Да\" titleModifier=\"popup__title_delete\">\n        <div className=\"popup__input-field\">\n          <input id=\"place-input\" className=\"popup__input popup__input_place\" type=\"text\" placeholder=\"Название\" name=\"name\" minLength=\"2\" maxLength=\"30\" required />\n          <span id=\"place-input-error\" className=\"popup__input-error\"></span>\n        </div>\n        <div className=\"popup__input-field\">\n          <input id=\"link-input\" className=\"popup__input popup__input_link\" type=\"url\" placeholder=\"Ссылка на картинку\" name=\"link\" required />\n          <span id=\"link-input-error\" className=\"popup__input-error\"></span>\n        </div>\n      </PopupWithForm>\n      <ImagePopup isOpen={selectedCard} onClose={closeAllPopups} name={imageData.name} link={imageData.link} />\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}